package com.nolankuza.theultimatealliance.model.gamedata;

import android.os.Parcel;

class Data extends DataSuper {

    public int startPosition;
    public int preload;
    public boolean crossInitiationLine;
    public int autoCellTrenchClose;
    public int autoCellTrenchFar;
    public int autoCellOpponentTrenchClose;
    public int autoCellOpponentTrenchFar;
    public int autoCellBoundaryClose;
    public int autoCellBoundaryFar;
    public int autoCell6S;
    public int autoCell4S;
    public int autoCell2S;
    public int autoCell4F;
    public int autoCell2F;
    public int autoCellFumble;
    public int cellLoading;
    public int cellFloor;
    public int cell3S;
    public int cell2S;
    public int cell1S;
    public int cell2F;
    public int cell1F;
    public int cellFumble;
    public boolean rotationControlS;
    public boolean rotationControlF;
    public boolean positionControlS;
    public boolean positionControlF;
    public String defendedTeam1;
    public float defendedTime1;
    public String defendedTeam2;
    public float defendedTime2;
    public String defendedTeam3;
    public float defendedTime3;
    public boolean endPark;
    public float hangTime;
    public boolean endHangS;
    public boolean endHangF;
    public int endHangAssisted;
    public boolean endHangWasAssisted;
    public int endHangSharedRung;
    public boolean endHangLevel;
    public boolean endNoRendezvousAttempt;
    public boolean totallyWorking;
    public boolean partiallyWorking;
    public boolean noShow;
    public boolean beatToDeath;
    public boolean selfDied;
    public boolean fellOver;
    public boolean pushedOver;
    public int defenseAbility;
    public String comments;

    @Override
    public void readFromParcel(Parcel in) {
        startPosition = in.readInt();
        preload = in.readInt();
        crossInitiationLine = toBoolean(in.readInt());
        autoCellTrenchClose = in.readInt();
        autoCellTrenchFar = in.readInt();
        autoCellOpponentTrenchClose = in.readInt();
        autoCellOpponentTrenchFar = in.readInt();
        autoCellBoundaryClose = in.readInt();
        autoCellBoundaryFar = in.readInt();
        autoCell6S = in.readInt();
        autoCell4S = in.readInt();
        autoCell2S = in.readInt();
        autoCell4F = in.readInt();
        autoCell2F = in.readInt();
        autoCellFumble = in.readInt();
        cellLoading = in.readInt();
        cellFloor = in.readInt();
        cell3S = in.readInt();
        cell2S = in.readInt();
        cell1S = in.readInt();
        cell2F = in.readInt();
        cell1F = in.readInt();
        cellFumble = in.readInt();
        rotationControlS = toBoolean(in.readInt());
        rotationControlF = toBoolean(in.readInt());
        positionControlS = toBoolean(in.readInt());
        positionControlF = toBoolean(in.readInt());
        defendedTeam1 = in.readString();
        defendedTime1 = in.readFloat();
        defendedTeam2 = in.readString();
        defendedTime2 = in.readFloat();
        defendedTeam3 = in.readString();
        defendedTime3 = in.readFloat();
        endPark = toBoolean(in.readInt());
        hangTime = in.readFloat();
        endHangS = toBoolean(in.readInt());
        endHangF = toBoolean(in.readInt());
        endHangAssisted = in.readInt();
        endHangWasAssisted = toBoolean(in.readInt());
        endHangSharedRung = in.readInt();
        endHangLevel = toBoolean(in.readInt());
        endNoRendezvousAttempt = toBoolean(in.readInt());
        totallyWorking = toBoolean(in.readInt());
        partiallyWorking = toBoolean(in.readInt());
        noShow = toBoolean(in.readInt());
        beatToDeath = toBoolean(in.readInt());
        selfDied = toBoolean(in.readInt());
        fellOver = toBoolean(in.readInt());
        pushedOver = toBoolean(in.readInt());
        defenseAbility = in.readInt();
        comments = in.readString();
    }

    @Override
    public void writeToParcel(Parcel parcel, int flags) {
        parcel.writeInt(startPosition);
        parcel.writeInt(preload);
        parcel.writeInt(fromBoolean(crossInitiationLine));
        parcel.writeInt(autoCellTrenchClose);
        parcel.writeInt(autoCellTrenchFar);
        parcel.writeInt(autoCellOpponentTrenchClose);
        parcel.writeInt(autoCellOpponentTrenchFar);
        parcel.writeInt(autoCellBoundaryClose);
        parcel.writeInt(autoCellBoundaryFar);
        parcel.writeInt(autoCell6S);
        parcel.writeInt(autoCell4S);
        parcel.writeInt(autoCell2S);
        parcel.writeInt(autoCell4F);
        parcel.writeInt(autoCell2F);
        parcel.writeInt(autoCellFumble);
        parcel.writeInt(cellLoading);
        parcel.writeInt(cellFloor);
        parcel.writeInt(cell3S);
        parcel.writeInt(cell2S);
        parcel.writeInt(cell1S);
        parcel.writeInt(cell2F);
        parcel.writeInt(cell1F);
        parcel.writeInt(cellFumble);
        parcel.writeInt(fromBoolean(rotationControlS));
        parcel.writeInt(fromBoolean(rotationControlF));
        parcel.writeInt(fromBoolean(positionControlS));
        parcel.writeInt(fromBoolean(positionControlF));
        parcel.writeString(defendedTeam1);
        parcel.writeFloat(defendedTime1);
        parcel.writeString(defendedTeam2);
        parcel.writeFloat(defendedTime2);
        parcel.writeString(defendedTeam3);
        parcel.writeFloat(defendedTime3);
        parcel.writeInt(fromBoolean(endPark));
        parcel.writeFloat(hangTime);
        parcel.writeInt(fromBoolean(endHangS));
        parcel.writeInt(fromBoolean(endHangF));
        parcel.writeInt(endHangAssisted);
        parcel.writeInt(fromBoolean(endHangWasAssisted));
        parcel.writeInt(endHangSharedRung);
        parcel.writeInt(fromBoolean(endHangLevel));
        parcel.writeInt(fromBoolean(endNoRendezvousAttempt));
        parcel.writeInt(fromBoolean(totallyWorking));
        parcel.writeInt(fromBoolean(partiallyWorking));
        parcel.writeInt(fromBoolean(noShow));
        parcel.writeInt(fromBoolean(beatToDeath));
        parcel.writeInt(fromBoolean(selfDied));
        parcel.writeInt(fromBoolean(fellOver));
        parcel.writeInt(fromBoolean(pushedOver));
        parcel.writeInt(defenseAbility);
        parcel.writeString(comments);
    }
}
