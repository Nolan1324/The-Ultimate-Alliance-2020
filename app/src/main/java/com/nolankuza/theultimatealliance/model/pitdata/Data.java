package com.nolankuza.theultimatealliance.model.pitdata;

import android.os.Parcel;

class Data extends DataSuper {

    public float length;
    public float width;
    public float height;
    public float weight;
    public float topSpeedFps;
    public String language;
    public String numWheels;
    public String wheelType;
    public String numSecondaryWheels;
    public String secondaryWheelType;
    public String driveTrainType;
    public String driveMotorType;
    public String numDriveMotors;
    public boolean startingPositionL;
    public boolean startingPositionC;
    public boolean startingPositionR;
    public boolean startingLevel1;
    public boolean startingLevel2;
    public boolean autoLeaveHab;
    public boolean autoShipL;
    public boolean autoShipC;
    public boolean autoShipR;
    public boolean autoRocketL;
    public boolean autoRocketR;
    public boolean retractFrame;
    public String defense;
    public boolean climbLevel1;
    public boolean climbLevel2;
    public boolean climbLevel3;
    public float climbTime;
    public String assistToLevel2;
    public String assistToLevel3;
    public boolean hatchFromStation;
    public boolean hatchFromFloor;
    public boolean hatchToShip;
    public boolean hatchToRocket1;
    public boolean hatchToRocket2;
    public boolean hatchToRocket3;
    public boolean hatchFromOpponentSide;
    public boolean cargoFromDepot;
    public boolean cargoFromStation;
    public boolean cargoFromFloor;
    public boolean cargoToShip;
    public boolean cargoToRocket1;
    public boolean cargoToRocket2;
    public boolean cargoToRocket3;
    public boolean cargoFromOpponentSide;
    public boolean hasCamera;
    public boolean hatchPreload;
    public boolean cargoPreload;
    public boolean willingToDefend;
    public float groundClearance;
    public String comments;
    
    @Override
    public void readFromParcel(Parcel in) {
        length = in.readFloat();
        width = in.readFloat();
        height = in.readFloat();
        weight = in.readFloat();
        topSpeedFps = in.readFloat();
        language = in.readString();
        numWheels = in.readString();
        wheelType = in.readString();
        numSecondaryWheels = in.readString();
        secondaryWheelType = in.readString();
        driveTrainType = in.readString();
        driveMotorType = in.readString();
        numDriveMotors = in.readString();
        startingPositionL = toBoolean(in.readInt());
        startingPositionC = toBoolean(in.readInt());
        startingPositionR = toBoolean(in.readInt());
        startingLevel1 = toBoolean(in.readInt());
        startingLevel2 = toBoolean(in.readInt());
        autoLeaveHab = toBoolean(in.readInt());
        autoShipL = toBoolean(in.readInt());
        autoShipC = toBoolean(in.readInt());
        autoShipR = toBoolean(in.readInt());
        autoRocketL = toBoolean(in.readInt());
        autoRocketR = toBoolean(in.readInt());
        retractFrame = toBoolean(in.readInt());
        defense = in.readString();
        climbLevel1 = toBoolean(in.readInt());
        climbLevel2 = toBoolean(in.readInt());
        climbLevel3 = toBoolean(in.readInt());
        climbTime = in.readFloat();
        assistToLevel2 = in.readString();
        assistToLevel3 = in.readString();
        hatchFromStation = toBoolean(in.readInt());
        hatchFromFloor = toBoolean(in.readInt());
        hatchToShip = toBoolean(in.readInt());
        hatchToRocket1 = toBoolean(in.readInt());
        hatchToRocket2 = toBoolean(in.readInt());
        hatchToRocket3 = toBoolean(in.readInt());
        hatchFromOpponentSide = toBoolean(in.readInt());
        cargoFromDepot = toBoolean(in.readInt());
        cargoFromStation = toBoolean(in.readInt());
        cargoFromFloor = toBoolean(in.readInt());
        cargoToShip = toBoolean(in.readInt());
        cargoToRocket1 = toBoolean(in.readInt());
        cargoToRocket2 = toBoolean(in.readInt());
        cargoToRocket3 = toBoolean(in.readInt());
        cargoFromOpponentSide = toBoolean(in.readInt());
        hasCamera = toBoolean(in.readInt());
        hatchPreload = toBoolean(in.readInt());
        cargoPreload = toBoolean(in.readInt());
        willingToDefend = toBoolean(in.readInt());
        groundClearance = in.readFloat();
        comments = in.readString();
    }

    @Override
    public void writeToParcel(Parcel parcel, int flags) {
        parcel.writeFloat(length);
        parcel.writeFloat(width);
        parcel.writeFloat(height);
        parcel.writeFloat(weight);
        parcel.writeFloat(topSpeedFps);
        parcel.writeString(language);
        parcel.writeString(numWheels);
        parcel.writeString(wheelType);
        parcel.writeString(numSecondaryWheels);
        parcel.writeString(secondaryWheelType);
        parcel.writeString(driveTrainType);
        parcel.writeString(driveMotorType);
        parcel.writeString(numDriveMotors);
        parcel.writeInt(fromBoolean(startingPositionL));
        parcel.writeInt(fromBoolean(startingPositionC));
        parcel.writeInt(fromBoolean(startingPositionR));
        parcel.writeInt(fromBoolean(startingLevel1));
        parcel.writeInt(fromBoolean(startingLevel2));
        parcel.writeInt(fromBoolean(autoLeaveHab));
        parcel.writeInt(fromBoolean(autoShipL));
        parcel.writeInt(fromBoolean(autoShipC));
        parcel.writeInt(fromBoolean(autoShipR));
        parcel.writeInt(fromBoolean(autoRocketL));
        parcel.writeInt(fromBoolean(autoRocketR));
        parcel.writeInt(fromBoolean(retractFrame));
        parcel.writeString(defense);
        parcel.writeInt(fromBoolean(climbLevel1));
        parcel.writeInt(fromBoolean(climbLevel2));
        parcel.writeInt(fromBoolean(climbLevel3));
        parcel.writeFloat(climbTime);
        parcel.writeString(assistToLevel2);
        parcel.writeString(assistToLevel3);
        parcel.writeInt(fromBoolean(hatchFromStation));
        parcel.writeInt(fromBoolean(hatchFromFloor));
        parcel.writeInt(fromBoolean(hatchToShip));
        parcel.writeInt(fromBoolean(hatchToRocket1));
        parcel.writeInt(fromBoolean(hatchToRocket2));
        parcel.writeInt(fromBoolean(hatchToRocket3));
        parcel.writeInt(fromBoolean(hatchFromOpponentSide));
        parcel.writeInt(fromBoolean(cargoFromDepot));
        parcel.writeInt(fromBoolean(cargoFromStation));
        parcel.writeInt(fromBoolean(cargoFromFloor));
        parcel.writeInt(fromBoolean(cargoToShip));
        parcel.writeInt(fromBoolean(cargoToRocket1));
        parcel.writeInt(fromBoolean(cargoToRocket2));
        parcel.writeInt(fromBoolean(cargoToRocket3));
        parcel.writeInt(fromBoolean(cargoFromOpponentSide));
        parcel.writeInt(fromBoolean(hasCamera));
        parcel.writeInt(fromBoolean(hatchPreload));
        parcel.writeInt(fromBoolean(cargoPreload));
        parcel.writeInt(fromBoolean(willingToDefend));
        parcel.writeFloat(groundClearance);
        parcel.writeString(comments);
    }
}
