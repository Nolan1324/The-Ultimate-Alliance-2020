{
  "formatVersion": 1,
  "database": {
    "version": 38,
    "identityHash": "fec8d027fcff8c40d814658668183c9d",
    "entities": [
      {
        "tableName": "matches",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `matchNumber` INTEGER NOT NULL, `time` INTEGER NOT NULL, `red1` TEXT, `red2` TEXT, `red3` TEXT, `blue1` TEXT, `blue2` TEXT, `blue3` TEXT, `scouted` INTEGER NOT NULL, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "matchNumber",
            "columnName": "matchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "red1",
            "columnName": "red1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "red2",
            "columnName": "red2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "red3",
            "columnName": "red3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue1",
            "columnName": "blue1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue2",
            "columnName": "blue2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue3",
            "columnName": "blue3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "students",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`primaryKey` TEXT NOT NULL, `lastName` TEXT, `firstName` TEXT, `grade` INTEGER NOT NULL, PRIMARY KEY(`primaryKey`))",
        "fields": [
          {
            "fieldPath": "primaryKey",
            "columnName": "primaryKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "grade",
            "columnName": "grade",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "primaryKey"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "assignments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `role` INTEGER NOT NULL, `playoffs` INTEGER NOT NULL, `student` TEXT, PRIMARY KEY(`name`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playoffs",
            "columnName": "playoffs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "student",
            "columnName": "student",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "name"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "teams",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `nickname` TEXT, `teamNumber` INTEGER NOT NULL, `city` TEXT, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nickname",
            "columnName": "nickname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` INTEGER NOT NULL, `eventKey` TEXT, `allowStudentsToChangeName` INTEGER NOT NULL, `showAll` INTEGER NOT NULL, `fieldReverse` INTEGER NOT NULL, `passwordHash` BLOB, `passwordSalt` BLOB, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventKey",
            "columnName": "eventKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allowStudentsToChangeName",
            "columnName": "allowStudentsToChangeName",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showAll",
            "columnName": "showAll",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fieldReverse",
            "columnName": "fieldReverse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passwordHash",
            "columnName": "passwordHash",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "passwordSalt",
            "columnName": "passwordSalt",
            "affinity": "BLOB",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "gamedata",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`matchKey` TEXT NOT NULL, `matchNumber` INTEGER NOT NULL, `alliance` INTEGER NOT NULL, `driverStation` INTEGER NOT NULL, `teamNumber` INTEGER NOT NULL, `scouter` TEXT, `scouted` INTEGER NOT NULL, `synced` INTEGER NOT NULL, `startPosition` INTEGER, `preload` INTEGER, `crossInitiationLine` INTEGER, `autoCellTrenchClose` INTEGER, `autoCellTrenchFar` INTEGER, `autoCellOpponentTrenchClose` INTEGER, `autoCellOpponentTrenchFar` INTEGER, `autoCellBoundaryClose` INTEGER, `autoCellBoundaryFar` INTEGER, `autoCell6S` INTEGER, `autoCell4S` INTEGER, `autoCell2S` INTEGER, `autoCell4F` INTEGER, `autoCell2F` INTEGER, `autoCellFumble` INTEGER, `cellLoading` INTEGER, `cellFloor` INTEGER, `cell3S` INTEGER, `cell2S` INTEGER, `cell1S` INTEGER, `cell2F` INTEGER, `cell1F` INTEGER, `cellFumble` INTEGER, `rotationControlS` INTEGER, `rotationControlF` INTEGER, `positionControlS` INTEGER, `positionControlF` INTEGER, `defendedTeam1` TEXT, `defendedTime1` REAL, `defendedTeam2` TEXT, `defendedTime2` REAL, `defendedTeam3` TEXT, `defendedTime3` REAL, `endPark` INTEGER, `hangTime` REAL, `endHangS` INTEGER, `endHangF` INTEGER, `endHangAssisted` INTEGER, `endHangWasAssisted` INTEGER, `endHangSharedRung` INTEGER, `endHangLevel` INTEGER, `endNoRendezvousAttempt` INTEGER, `totallyWorking` INTEGER, `partiallyWorking` INTEGER, `noShow` INTEGER, `beatToDeath` INTEGER, `selfDied` INTEGER, `fellOver` INTEGER, `pushedOver` INTEGER, `defenseAbility` INTEGER, `comments` TEXT, PRIMARY KEY(`matchKey`, `alliance`, `driverStation`))",
        "fields": [
          {
            "fieldPath": "matchKey",
            "columnName": "matchKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "matchNumber",
            "columnName": "matchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alliance",
            "columnName": "alliance",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "driverStation",
            "columnName": "driverStation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scouter",
            "columnName": "scouter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data.startPosition",
            "columnName": "startPosition",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.preload",
            "columnName": "preload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.crossInitiationLine",
            "columnName": "crossInitiationLine",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellTrenchClose",
            "columnName": "autoCellTrenchClose",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellTrenchFar",
            "columnName": "autoCellTrenchFar",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellOpponentTrenchClose",
            "columnName": "autoCellOpponentTrenchClose",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellOpponentTrenchFar",
            "columnName": "autoCellOpponentTrenchFar",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellBoundaryClose",
            "columnName": "autoCellBoundaryClose",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellBoundaryFar",
            "columnName": "autoCellBoundaryFar",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCell6S",
            "columnName": "autoCell6S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCell4S",
            "columnName": "autoCell4S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCell2S",
            "columnName": "autoCell2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCell4F",
            "columnName": "autoCell4F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCell2F",
            "columnName": "autoCell2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCellFumble",
            "columnName": "autoCellFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cellLoading",
            "columnName": "cellLoading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cellFloor",
            "columnName": "cellFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cell3S",
            "columnName": "cell3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cell2S",
            "columnName": "cell2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cell1S",
            "columnName": "cell1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cell2F",
            "columnName": "cell2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cell1F",
            "columnName": "cell1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cellFumble",
            "columnName": "cellFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.rotationControlS",
            "columnName": "rotationControlS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.rotationControlF",
            "columnName": "rotationControlF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.positionControlS",
            "columnName": "positionControlS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.positionControlF",
            "columnName": "positionControlF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTeam1",
            "columnName": "defendedTeam1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTime1",
            "columnName": "defendedTime1",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTeam2",
            "columnName": "defendedTeam2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTime2",
            "columnName": "defendedTime2",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTeam3",
            "columnName": "defendedTeam3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.defendedTime3",
            "columnName": "defendedTime3",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.endPark",
            "columnName": "endPark",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hangTime",
            "columnName": "hangTime",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangS",
            "columnName": "endHangS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangF",
            "columnName": "endHangF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangAssisted",
            "columnName": "endHangAssisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangWasAssisted",
            "columnName": "endHangWasAssisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangSharedRung",
            "columnName": "endHangSharedRung",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endHangLevel",
            "columnName": "endHangLevel",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endNoRendezvousAttempt",
            "columnName": "endNoRendezvousAttempt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.totallyWorking",
            "columnName": "totallyWorking",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.partiallyWorking",
            "columnName": "partiallyWorking",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.noShow",
            "columnName": "noShow",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.beatToDeath",
            "columnName": "beatToDeath",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.selfDied",
            "columnName": "selfDied",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.fellOver",
            "columnName": "fellOver",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.pushedOver",
            "columnName": "pushedOver",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.defenseAbility",
            "columnName": "defenseAbility",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "matchKey",
            "alliance",
            "driverStation"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "pitdata",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventKey` TEXT NOT NULL, `teamNumber` INTEGER NOT NULL, `teamName` TEXT, `scouter` TEXT, `scouted` INTEGER NOT NULL, `synced` INTEGER NOT NULL, `length` REAL, `width` REAL, `height` REAL, `weight` REAL, `topSpeedFps` REAL, `language` TEXT, `numWheels` TEXT, `wheelType` TEXT, `numSecondaryWheels` TEXT, `secondaryWheelType` TEXT, `driveTrainType` TEXT, `driveMotorType` TEXT, `numDriveMotors` TEXT, `startingPositionL` INTEGER, `startingPositionC` INTEGER, `startingPositionR` INTEGER, `startingLevel1` INTEGER, `startingLevel2` INTEGER, `autoLeaveHab` INTEGER, `autoShipL` INTEGER, `autoShipC` INTEGER, `autoShipR` INTEGER, `autoRocketL` INTEGER, `autoRocketR` INTEGER, `retractFrame` INTEGER, `defense` TEXT, `climbLevel1` INTEGER, `climbLevel2` INTEGER, `climbLevel3` INTEGER, `climbTime` REAL, `assistToLevel2` TEXT, `assistToLevel3` TEXT, `hatchFromStation` INTEGER, `hatchFromFloor` INTEGER, `hatchToShip` INTEGER, `hatchToRocket1` INTEGER, `hatchToRocket2` INTEGER, `hatchToRocket3` INTEGER, `hatchFromOpponentSide` INTEGER, `cargoFromDepot` INTEGER, `cargoFromStation` INTEGER, `cargoFromFloor` INTEGER, `cargoToShip` INTEGER, `cargoToRocket1` INTEGER, `cargoToRocket2` INTEGER, `cargoToRocket3` INTEGER, `cargoFromOpponentSide` INTEGER, `hasCamera` INTEGER, `hatchPreload` INTEGER, `cargoPreload` INTEGER, `willingToDefend` INTEGER, `groundClearance` REAL, `comments` TEXT, PRIMARY KEY(`eventKey`, `teamNumber`))",
        "fields": [
          {
            "fieldPath": "eventKey",
            "columnName": "eventKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamName",
            "columnName": "teamName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouter",
            "columnName": "scouter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data.length",
            "columnName": "length",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.width",
            "columnName": "width",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.height",
            "columnName": "height",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.topSpeedFps",
            "columnName": "topSpeedFps",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numWheels",
            "columnName": "numWheels",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.wheelType",
            "columnName": "wheelType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numSecondaryWheels",
            "columnName": "numSecondaryWheels",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.secondaryWheelType",
            "columnName": "secondaryWheelType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.driveTrainType",
            "columnName": "driveTrainType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.driveMotorType",
            "columnName": "driveMotorType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numDriveMotors",
            "columnName": "numDriveMotors",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionL",
            "columnName": "startingPositionL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionC",
            "columnName": "startingPositionC",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionR",
            "columnName": "startingPositionR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingLevel1",
            "columnName": "startingLevel1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingLevel2",
            "columnName": "startingLevel2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoLeaveHab",
            "columnName": "autoLeaveHab",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipL",
            "columnName": "autoShipL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipC",
            "columnName": "autoShipC",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipR",
            "columnName": "autoShipR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoRocketL",
            "columnName": "autoRocketL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoRocketR",
            "columnName": "autoRocketR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.retractFrame",
            "columnName": "retractFrame",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.defense",
            "columnName": "defense",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel1",
            "columnName": "climbLevel1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel2",
            "columnName": "climbLevel2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel3",
            "columnName": "climbLevel3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbTime",
            "columnName": "climbTime",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.assistToLevel2",
            "columnName": "assistToLevel2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.assistToLevel3",
            "columnName": "assistToLevel3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromStation",
            "columnName": "hatchFromStation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromFloor",
            "columnName": "hatchFromFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToShip",
            "columnName": "hatchToShip",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket1",
            "columnName": "hatchToRocket1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket2",
            "columnName": "hatchToRocket2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket3",
            "columnName": "hatchToRocket3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromOpponentSide",
            "columnName": "hatchFromOpponentSide",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromDepot",
            "columnName": "cargoFromDepot",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromStation",
            "columnName": "cargoFromStation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromFloor",
            "columnName": "cargoFromFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToShip",
            "columnName": "cargoToShip",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket1",
            "columnName": "cargoToRocket1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket2",
            "columnName": "cargoToRocket2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket3",
            "columnName": "cargoToRocket3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromOpponentSide",
            "columnName": "cargoFromOpponentSide",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hasCamera",
            "columnName": "hasCamera",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchPreload",
            "columnName": "hatchPreload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoPreload",
            "columnName": "cargoPreload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.willingToDefend",
            "columnName": "willingToDefend",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.groundClearance",
            "columnName": "groundClearance",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "eventKey",
            "teamNumber"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "playoffdata",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`index` INTEGER NOT NULL, `alliance` INTEGER NOT NULL, `driverStation` INTEGER NOT NULL, `teamNumber` INTEGER NOT NULL, `scouter` TEXT, `scouted` INTEGER NOT NULL, `synced` INTEGER NOT NULL, `preload` INTEGER, `startLevel` INTEGER, `endLevel` INTEGER, `hatchS` INTEGER, `hatchF` INTEGER, `cargoS` INTEGER, `cargoF` INTEGER, PRIMARY KEY(`index`, `alliance`, `driverStation`))",
        "fields": [
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alliance",
            "columnName": "alliance",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "driverStation",
            "columnName": "driverStation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scouter",
            "columnName": "scouter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data.preload",
            "columnName": "preload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startLevel",
            "columnName": "startLevel",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel",
            "columnName": "endLevel",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchS",
            "columnName": "hatchS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchF",
            "columnName": "hatchF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoS",
            "columnName": "cargoS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoF",
            "columnName": "cargoF",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "index",
            "alliance",
            "driverStation"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"fec8d027fcff8c40d814658668183c9d\")"
    ]
  }
}