{
  "formatVersion": 1,
  "database": {
    "version": 34,
    "identityHash": "0efeda0a31aa0f0cfd1dbd77812227ff",
    "entities": [
      {
        "tableName": "matches",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `matchNumber` INTEGER NOT NULL, `time` INTEGER NOT NULL, `red1` TEXT, `red2` TEXT, `red3` TEXT, `blue1` TEXT, `blue2` TEXT, `blue3` TEXT, `scouted` INTEGER NOT NULL, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "matchNumber",
            "columnName": "matchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "red1",
            "columnName": "red1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "red2",
            "columnName": "red2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "red3",
            "columnName": "red3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue1",
            "columnName": "blue1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue2",
            "columnName": "blue2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blue3",
            "columnName": "blue3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "students",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`primaryKey` TEXT NOT NULL, `lastName` TEXT, `firstName` TEXT, `grade` INTEGER NOT NULL, PRIMARY KEY(`primaryKey`))",
        "fields": [
          {
            "fieldPath": "primaryKey",
            "columnName": "primaryKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "grade",
            "columnName": "grade",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "primaryKey"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "assignments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `role` INTEGER NOT NULL, `student` TEXT, PRIMARY KEY(`name`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "student",
            "columnName": "student",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "name"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "teams",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `nickname` TEXT, `teamNumber` INTEGER NOT NULL, `city` TEXT, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nickname",
            "columnName": "nickname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` INTEGER NOT NULL, `eventKey` TEXT, `allowStudentsToChangeName` INTEGER NOT NULL, `showAll` INTEGER NOT NULL, `fieldReverse` INTEGER NOT NULL, `passwordHash` BLOB, `passwordSalt` BLOB, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventKey",
            "columnName": "eventKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allowStudentsToChangeName",
            "columnName": "allowStudentsToChangeName",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showAll",
            "columnName": "showAll",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fieldReverse",
            "columnName": "fieldReverse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passwordHash",
            "columnName": "passwordHash",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "passwordSalt",
            "columnName": "passwordSalt",
            "affinity": "BLOB",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "gamedata",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`matchKey` TEXT NOT NULL, `matchNumber` INTEGER NOT NULL, `alliance` INTEGER NOT NULL, `driverStation` INTEGER NOT NULL, `teamNumber` INTEGER NOT NULL, `scouter` TEXT, `scouted` INTEGER NOT NULL, `synced` INTEGER NOT NULL, `startPosition` INTEGER, `startLevel` INTEGER, `preload` INTEGER, `droveOff` INTEGER, `autoHatchLoading` INTEGER, `autoHatchFloor` INTEGER, `autoCargoLoading` INTEGER, `autoCargoFloor` INTEGER, `autoHatchRocket3S` INTEGER, `autoHatchRocket2S` INTEGER, `autoHatchRocket1S` INTEGER, `autoHatchRocket3F` INTEGER, `autoHatchRocket2F` INTEGER, `autoHatchRocket1F` INTEGER, `autoCargoRocket3S` INTEGER, `autoCargoRocket2S` INTEGER, `autoCargoRocket1S` INTEGER, `autoCargoRocket3F` INTEGER, `autoCargoRocket2F` INTEGER, `autoCargoRocket1F` INTEGER, `autoHatchFumble` INTEGER, `autoCargoFumble` INTEGER, `autoHatchShipS` INTEGER, `autoHatchShipF` INTEGER, `autoCargoShipS` INTEGER, `autoCargoShipF` INTEGER, `hatchLoading` INTEGER, `hatchFloor` INTEGER, `cargoLoading` INTEGER, `cargoFloor` INTEGER, `hatchRocket3S` INTEGER, `hatchRocket2S` INTEGER, `hatchRocket1S` INTEGER, `hatchRocket3F` INTEGER, `hatchRocket2F` INTEGER, `hatchRocket1F` INTEGER, `cargoRocket3S` INTEGER, `cargoRocket2S` INTEGER, `cargoRocket1S` INTEGER, `cargoRocket3F` INTEGER, `cargoRocket2F` INTEGER, `cargoRocket1F` INTEGER, `hatchFumble` INTEGER, `cargoFumble` INTEGER, `hatchShipS` INTEGER, `hatchShipF` INTEGER, `cargoShipS` INTEGER, `cargoShipF` INTEGER, `endLevel1S` INTEGER, `endLevel1F` INTEGER, `endLevel2S` INTEGER, `endLevel2F` INTEGER, `endLevel2Assisted` INTEGER, `endLevel2WasAssisted` INTEGER, `endLevel3S` INTEGER, `endLevel3F` INTEGER, `endLevel3Assisted` INTEGER, `endLevel3WasAssisted` INTEGER, `endLevel3FromLevel2` INTEGER, `endLevel3SharedPlatform` INTEGER, `endNoHabAttempt` INTEGER, `climbTime` REAL, `totallyWorking` INTEGER, `partiallyWorking` INTEGER, `noShow` INTEGER, `beatToDeath` INTEGER, `selfDied` INTEGER, `fellOver` INTEGER, `pushedOver` INTEGER, `comments` TEXT, PRIMARY KEY(`matchKey`, `alliance`, `driverStation`))",
        "fields": [
          {
            "fieldPath": "matchKey",
            "columnName": "matchKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "matchNumber",
            "columnName": "matchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alliance",
            "columnName": "alliance",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "driverStation",
            "columnName": "driverStation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scouter",
            "columnName": "scouter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data.startPosition",
            "columnName": "startPosition",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startLevel",
            "columnName": "startLevel",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.preload",
            "columnName": "preload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.droveOff",
            "columnName": "droveOff",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchLoading",
            "columnName": "autoHatchLoading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchFloor",
            "columnName": "autoHatchFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoLoading",
            "columnName": "autoCargoLoading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoFloor",
            "columnName": "autoCargoFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket3S",
            "columnName": "autoHatchRocket3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket2S",
            "columnName": "autoHatchRocket2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket1S",
            "columnName": "autoHatchRocket1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket3F",
            "columnName": "autoHatchRocket3F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket2F",
            "columnName": "autoHatchRocket2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchRocket1F",
            "columnName": "autoHatchRocket1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket3S",
            "columnName": "autoCargoRocket3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket2S",
            "columnName": "autoCargoRocket2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket1S",
            "columnName": "autoCargoRocket1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket3F",
            "columnName": "autoCargoRocket3F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket2F",
            "columnName": "autoCargoRocket2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoRocket1F",
            "columnName": "autoCargoRocket1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchFumble",
            "columnName": "autoHatchFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoFumble",
            "columnName": "autoCargoFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchShipS",
            "columnName": "autoHatchShipS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoHatchShipF",
            "columnName": "autoHatchShipF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoShipS",
            "columnName": "autoCargoShipS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoCargoShipF",
            "columnName": "autoCargoShipF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchLoading",
            "columnName": "hatchLoading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFloor",
            "columnName": "hatchFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoLoading",
            "columnName": "cargoLoading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFloor",
            "columnName": "cargoFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket3S",
            "columnName": "hatchRocket3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket2S",
            "columnName": "hatchRocket2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket1S",
            "columnName": "hatchRocket1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket3F",
            "columnName": "hatchRocket3F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket2F",
            "columnName": "hatchRocket2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchRocket1F",
            "columnName": "hatchRocket1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket3S",
            "columnName": "cargoRocket3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket2S",
            "columnName": "cargoRocket2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket1S",
            "columnName": "cargoRocket1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket3F",
            "columnName": "cargoRocket3F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket2F",
            "columnName": "cargoRocket2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoRocket1F",
            "columnName": "cargoRocket1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFumble",
            "columnName": "hatchFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFumble",
            "columnName": "cargoFumble",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchShipS",
            "columnName": "hatchShipS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchShipF",
            "columnName": "hatchShipF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoShipS",
            "columnName": "cargoShipS",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoShipF",
            "columnName": "cargoShipF",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel1S",
            "columnName": "endLevel1S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel1F",
            "columnName": "endLevel1F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel2S",
            "columnName": "endLevel2S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel2F",
            "columnName": "endLevel2F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel2Assisted",
            "columnName": "endLevel2Assisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel2WasAssisted",
            "columnName": "endLevel2WasAssisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3S",
            "columnName": "endLevel3S",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3F",
            "columnName": "endLevel3F",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3Assisted",
            "columnName": "endLevel3Assisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3WasAssisted",
            "columnName": "endLevel3WasAssisted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3FromLevel2",
            "columnName": "endLevel3FromLevel2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endLevel3SharedPlatform",
            "columnName": "endLevel3SharedPlatform",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.endNoHabAttempt",
            "columnName": "endNoHabAttempt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbTime",
            "columnName": "climbTime",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.totallyWorking",
            "columnName": "totallyWorking",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.partiallyWorking",
            "columnName": "partiallyWorking",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.noShow",
            "columnName": "noShow",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.beatToDeath",
            "columnName": "beatToDeath",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.selfDied",
            "columnName": "selfDied",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.fellOver",
            "columnName": "fellOver",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.pushedOver",
            "columnName": "pushedOver",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "matchKey",
            "alliance",
            "driverStation"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "pitdata",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventKey` TEXT NOT NULL, `teamNumber` INTEGER NOT NULL, `teamName` TEXT, `scouter` TEXT, `scouted` INTEGER NOT NULL, `synced` INTEGER NOT NULL, `length` REAL, `width` REAL, `height` REAL, `weight` REAL, `topSpeedFps` REAL, `language` TEXT, `numWheels` TEXT, `wheelType` TEXT, `numSecondaryWheels` TEXT, `secondaryWheelType` TEXT, `driveTrainType` TEXT, `driveMotorType` TEXT, `numDriveMotors` TEXT, `startingPositionL` INTEGER, `startingPositionC` INTEGER, `startingPositionR` INTEGER, `startingLevel1` INTEGER, `startingLevel2` INTEGER, `autoLeaveHab` INTEGER, `autoShipL` INTEGER, `autoShipC` INTEGER, `autoShipR` INTEGER, `autoRocketL` INTEGER, `autoRocketR` INTEGER, `retractFrame` INTEGER, `defense` TEXT, `climbLevel1` INTEGER, `climbLevel2` INTEGER, `climbLevel3` INTEGER, `climbTime` REAL, `assistToLevel2` TEXT, `assistToLevel3` TEXT, `hatchFromStation` INTEGER, `hatchFromFloor` INTEGER, `hatchToShip` INTEGER, `hatchToRocket1` INTEGER, `hatchToRocket2` INTEGER, `hatchToRocket3` INTEGER, `hatchFromOpponentSide` INTEGER, `cargoFromDepot` INTEGER, `cargoFromStation` INTEGER, `cargoFromFloor` INTEGER, `cargoToShip` INTEGER, `cargoToRocket1` INTEGER, `cargoToRocket2` INTEGER, `cargoToRocket3` INTEGER, `cargoFromOpponentSide` INTEGER, `hasCamera` INTEGER, `hatchPreload` INTEGER, `cargoPreload` INTEGER, `comments` TEXT, PRIMARY KEY(`eventKey`, `teamNumber`))",
        "fields": [
          {
            "fieldPath": "eventKey",
            "columnName": "eventKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "teamNumber",
            "columnName": "teamNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamName",
            "columnName": "teamName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouter",
            "columnName": "scouter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scouted",
            "columnName": "scouted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data.length",
            "columnName": "length",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.width",
            "columnName": "width",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.height",
            "columnName": "height",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.topSpeedFps",
            "columnName": "topSpeedFps",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numWheels",
            "columnName": "numWheels",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.wheelType",
            "columnName": "wheelType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numSecondaryWheels",
            "columnName": "numSecondaryWheels",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.secondaryWheelType",
            "columnName": "secondaryWheelType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.driveTrainType",
            "columnName": "driveTrainType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.driveMotorType",
            "columnName": "driveMotorType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.numDriveMotors",
            "columnName": "numDriveMotors",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionL",
            "columnName": "startingPositionL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionC",
            "columnName": "startingPositionC",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingPositionR",
            "columnName": "startingPositionR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingLevel1",
            "columnName": "startingLevel1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.startingLevel2",
            "columnName": "startingLevel2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoLeaveHab",
            "columnName": "autoLeaveHab",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipL",
            "columnName": "autoShipL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipC",
            "columnName": "autoShipC",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoShipR",
            "columnName": "autoShipR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoRocketL",
            "columnName": "autoRocketL",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.autoRocketR",
            "columnName": "autoRocketR",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.retractFrame",
            "columnName": "retractFrame",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.defense",
            "columnName": "defense",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel1",
            "columnName": "climbLevel1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel2",
            "columnName": "climbLevel2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbLevel3",
            "columnName": "climbLevel3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.climbTime",
            "columnName": "climbTime",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "data.assistToLevel2",
            "columnName": "assistToLevel2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.assistToLevel3",
            "columnName": "assistToLevel3",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromStation",
            "columnName": "hatchFromStation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromFloor",
            "columnName": "hatchFromFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToShip",
            "columnName": "hatchToShip",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket1",
            "columnName": "hatchToRocket1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket2",
            "columnName": "hatchToRocket2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchToRocket3",
            "columnName": "hatchToRocket3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchFromOpponentSide",
            "columnName": "hatchFromOpponentSide",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromDepot",
            "columnName": "cargoFromDepot",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromStation",
            "columnName": "cargoFromStation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromFloor",
            "columnName": "cargoFromFloor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToShip",
            "columnName": "cargoToShip",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket1",
            "columnName": "cargoToRocket1",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket2",
            "columnName": "cargoToRocket2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoToRocket3",
            "columnName": "cargoToRocket3",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoFromOpponentSide",
            "columnName": "cargoFromOpponentSide",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hasCamera",
            "columnName": "hasCamera",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.hatchPreload",
            "columnName": "hatchPreload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.cargoPreload",
            "columnName": "cargoPreload",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data.comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "eventKey",
            "teamNumber"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"0efeda0a31aa0f0cfd1dbd77812227ff\")"
    ]
  }
}